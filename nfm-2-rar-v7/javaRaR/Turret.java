
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Path2D;

class Turret {

 Mdm M;
 Path2D pth;
 int p;

 public Turret(Mdm m) {
  M = m;
 }

 void dt(Graphics2D gs, double[] x, double[] y, double[] z, double x0, double y0, double z0, int n, double r, double g, double b) {
  int c;
  for (c = 0; c < n; c++) {
   x[c] += x0 - M.x;
   y[c] += y0 - M.y;
   z[c] += z0 - M.z;
  }
  M.rot(x, y, x0 - M.x, y0 - M.y, 0, n);
  M.rot(y, z, y0 - M.y, z0 - M.z, 0, n);
  M.rot(x, z, x0 - M.x, z0 - M.z, 0, n);
  M.rot(x, z, M.cx, M.cz, M.xz, n);
  M.rot(y, z, M.cy, M.cz, M.zy, n);
  double[] x1 = new double[n];
  double[] y1 = new double[n];
  boolean tf = false;
  for (c = 0; c < n; c++) {
   x1[c] = M.xs(x[c], z[c]);
   y1[c] = M.ys(y[c], z[c]);
   if (y1[c] > 0 && y1[c] < M.h && x1[c] > 0 && x1[c] < M.w && z[c] > 10) {
    tf = true;
   }
  }
  if (tf) {
   r = r + r * (M.snap[0] * .01);
   g = g + g * (M.snap[1] * .01);
   b = b + b * (M.snap[2] * .01);
   gs.setColor(new Color((int) Math.max(0, Math.min(r, 255)), (int) Math.max(0, Math.min(g, 255)), (int) Math.max(0, Math.min(b, 255))));
   pth = new Path2D.Double();
   pth.moveTo(x1[0], y1[0]);
   for (p = 0; p < n; p++) {
    pth.lineTo(x1[p], y1[p]);
   }
   pth.closePath();
   gs.fill(pth);
  }
 }

 public void d(Graphics2D gs, double x, double y, double z) {
  byte b = 4;
  double[] x0 = new double[b];
  double[] y0 = new double[b];
  double[] z0 = new double[b];
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = 200;

  x0[1] = 25;
  y0[1] = -25;
  z0[1] = 70;

  x0[2] = 25;
  y0[2] = 25;
  z0[2] = 80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = 200;

  x0[1] = -25;
  y0[1] = -25;
  z0[1] = 70;

  x0[2] = -25;
  y0[2] = 25;
  z0[2] = 80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = 200;

  x0[1] = 25;
  y0[1] = -25;
  z0[1] = 70;

  x0[2] = -25;
  y0[2] = -25;
  z0[2] = 70;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = 200;

  x0[1] = 25;
  y0[1] = 25;
  z0[1] = 80;

  x0[2] = -25;
  y0[2] = 25;
  z0[2] = 80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);

  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = -200;

  x0[1] = 25;
  y0[1] = -25;
  z0[1] = -70;

  x0[2] = 25;
  y0[2] = 25;
  z0[2] = -80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = -200;

  x0[1] = -25;
  y0[1] = -25;
  z0[1] = -70;

  x0[2] = -25;
  y0[2] = 25;
  z0[2] = -80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = -200;

  x0[1] = 25;
  y0[1] = -25;
  z0[1] = -70;

  x0[2] = -25;
  y0[2] = -25;
  z0[2] = -70;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  x0[0] = 0;
  y0[0] = 0;
  z0[0] = -200;

  x0[1] = 25;
  y0[1] = 25;
  z0[1] = -80;

  x0[2] = -25;
  y0[2] = 25;
  z0[2] = -80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);

  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = -200;

  z0[1] = 25;
  y0[1] = -25;
  x0[1] = -70;

  z0[2] = 25;
  y0[2] = 25;
  x0[2] = -80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = -200;

  z0[1] = -25;
  y0[1] = -25;
  x0[1] = -70;

  z0[2] = -25;
  y0[2] = 25;
  x0[2] = -80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = -200;

  z0[1] = 25;
  y0[1] = -25;
  x0[1] = -70;

  z0[2] = -25;
  y0[2] = -25;
  x0[2] = -70;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = -200;

  z0[1] = 25;
  y0[1] = 25;
  x0[1] = -80;

  z0[2] = -25;
  y0[2] = 25;
  x0[2] = -80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);

  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = 200;

  z0[1] = 25;
  y0[1] = -25;
  x0[1] = 70;

  z0[2] = 25;
  y0[2] = 25;
  x0[2] = 80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = 200;

  z0[1] = -25;
  y0[1] = -25;
  x0[1] = 70;

  z0[2] = -25;
  y0[2] = 25;
  x0[2] = 80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = 200;

  z0[1] = 25;
  y0[1] = -25;
  x0[1] = 70;

  z0[2] = -25;
  y0[2] = -25;
  x0[2] = 70;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);
  b = 3;
  z0[0] = 0;
  y0[0] = 0;
  x0[0] = 200;

  z0[1] = 25;
  y0[1] = 25;
  x0[1] = 80;

  z0[2] = -25;
  y0[2] = 25;
  x0[2] = 80;
  dt(gs, x0, y0, z0, x, y, z, b, 128, 128, 128);

  b = 4;
  x0[0] = 100;
  y0[0] = 100;
  z0[0] = 100;

  x0[1] = 50;
  y0[1] = -100;
  z0[1] = 50;

  x0[2] = -50;
  y0[2] = -100;
  z0[2] = 50;

  x0[3] = -100;
  y0[3] = 100;
  z0[3] = 100;
  dt(gs, x0, y0, z0, x, y, z, b, 30, 30, 30);
  b = 4;
  x0[0] = 100;
  y0[0] = 100;
  z0[0] = -100;

  x0[1] = 50;
  y0[1] = -100;
  z0[1] = -50;

  x0[2] = -50;
  y0[2] = -100;
  z0[2] = -50;

  x0[3] = -100;
  y0[3] = 100;
  z0[3] = -100;
  dt(gs, x0, y0, z0, x, y, z, b, 30, 30, 30);
  b = 4;
  z0[0] = 100;
  y0[0] = 100;
  x0[0] = 100;

  z0[1] = 50;
  y0[1] = -100;
  x0[1] = 50;

  z0[2] = -50;
  y0[2] = -100;
  x0[2] = 50;

  z0[3] = -100;
  y0[3] = 100;
  x0[3] = 100;
  dt(gs, x0, y0, z0, x, y, z, b, 30, 30, 30);
  b = 4;
  z0[0] = 100;
  y0[0] = 100;
  x0[0] = -100;

  z0[1] = 50;
  y0[1] = -100;
  x0[1] = -50;

  z0[2] = -50;
  y0[2] = -100;
  x0[2] = -50;

  z0[3] = -100;
  y0[3] = 100;
  x0[3] = -100;
  dt(gs, x0, y0, z0, x, y, z, b, 30, 30, 30);
  b = 4;
  x0[0] = 100;
  y0[0] = 100;
  z0[0] = 100;

  x0[1] = 100;
  y0[1] = 100;
  z0[1] = -100;

  x0[2] = -100;
  y0[2] = 100;
  z0[2] = -100;

  x0[3] = -100;
  y0[3] = 100;
  z0[3] = 100;
  dt(gs, x0, y0, z0, x, y, z, b, 30, 30, 30);
 }
}
